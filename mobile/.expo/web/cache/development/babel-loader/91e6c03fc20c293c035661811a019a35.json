{"ast":null,"code":"import React, { useRef } from 'react';\nimport BottomSheet from '@gorhom/bottom-sheet';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ChatTeardropDots } from 'phosphor-react-native';\nimport { styles } from \"./styles\";\nimport { theme } from \"../../theme\";\nimport { gestureHandlerRootHOC } from 'react-native-gesture-handler';\nimport { Form } from \"../Form\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Widget() {\n  var bottomSheetRef = useRef(null);\n\n  function handleOpen() {\n    var _bottomSheetRef$curre;\n\n    (_bottomSheetRef$curre = bottomSheetRef.current) == null ? void 0 : _bottomSheetRef$curre.expand();\n  }\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleOpen,\n      children: _jsx(ChatTeardropDots, {\n        size: 24,\n        weight: \"bold\",\n        color: theme.colors.text_on_brand_color\n      })\n    }), _jsx(BottomSheet, {\n      ref: bottomSheetRef,\n      snapPoints: [1, 280],\n      backgroundStyle: styles.modal,\n      handleIndicatorStyle: styles.indicator,\n      children: _jsx(Form, {\n        feedbackType: \"BUG\"\n      })\n    })]\n  });\n}\n\nexport default gestureHandlerRootHOC(Widget);","map":{"version":3,"names":["React","useRef","BottomSheet","ChatTeardropDots","styles","theme","gestureHandlerRootHOC","Form","Widget","bottomSheetRef","handleOpen","current","expand","button","colors","text_on_brand_color","modal","indicator"],"sources":["/Volumes/hdd/_codes/nlw-return-impulse/mobile/src/components/Widget/index.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport BottomSheet from '@gorhom/bottom-sheet';\nimport { TouchableOpacity } from 'react-native';\nimport { ChatTeardropDots } from 'phosphor-react-native';\nimport { styles } from './styles';\nimport { theme } from '../../theme';\nimport { gestureHandlerRootHOC } from 'react-native-gesture-handler';\nimport { feedbackTypes } from '../../utils/feedbackTypes';\nimport { Success } from '../Success';\nimport { Form } from '../Form';\n\nexport type FeedbackType = keyof typeof feedbackTypes;\n\nfunction Widget() {\n  const bottomSheetRef = useRef<BottomSheet>(null);\n\n  function handleOpen() {\n    bottomSheetRef.current?.expand();\n  }\n\n  return (\n    <>\n      <TouchableOpacity style={styles.button} onPress={handleOpen}>\n        <ChatTeardropDots\n          size={24}\n          weight=\"bold\"\n          color={theme.colors.text_on_brand_color}\n        />\n      </TouchableOpacity>\n\n      <BottomSheet\n        ref={bottomSheetRef}\n        snapPoints={[1, 280]}\n        backgroundStyle={styles.modal}\n        handleIndicatorStyle={styles.indicator}\n      >\n        <Form feedbackType=\"BUG\" />\n      </BottomSheet>\n    </>\n  );\n}\n\nexport default gestureHandlerRootHOC(Widget);\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;AAEA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASC,MAAT;AACA,SAASC,KAAT;AACA,SAASC,qBAAT,QAAsC,8BAAtC;AAGA,SAASC,IAAT;;;;;AAIA,SAASC,MAAT,GAAkB;EAChB,IAAMC,cAAc,GAAGR,MAAM,CAAc,IAAd,CAA7B;;EAEA,SAASS,UAAT,GAAsB;IAAA;;IACpB,yBAAAD,cAAc,CAACE,OAAf,2CAAwBC,MAAxB;EACD;;EAED,OACE;IAAA,WACE,KAAC,gBAAD;MAAkB,KAAK,EAAER,MAAM,CAACS,MAAhC;MAAwC,OAAO,EAAEH,UAAjD;MAAA,UACE,KAAC,gBAAD;QACE,IAAI,EAAE,EADR;QAEE,MAAM,EAAC,MAFT;QAGE,KAAK,EAAEL,KAAK,CAACS,MAAN,CAAaC;MAHtB;IADF,EADF,EASE,KAAC,WAAD;MACE,GAAG,EAAEN,cADP;MAEE,UAAU,EAAE,CAAC,CAAD,EAAI,GAAJ,CAFd;MAGE,eAAe,EAAEL,MAAM,CAACY,KAH1B;MAIE,oBAAoB,EAAEZ,MAAM,CAACa,SAJ/B;MAAA,UAME,KAAC,IAAD;QAAM,YAAY,EAAC;MAAnB;IANF,EATF;EAAA,EADF;AAoBD;;AAED,eAAeX,qBAAqB,CAACE,MAAD,CAApC"},"metadata":{},"sourceType":"module"}