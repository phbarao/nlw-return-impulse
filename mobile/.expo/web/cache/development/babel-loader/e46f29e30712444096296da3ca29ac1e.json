{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"isLoading\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { theme } from \"../../theme\";\nimport { styles } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Button(_ref) {\n  var isLoading = _ref.isLoading,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsx(TouchableOpacity, _objectSpread(_objectSpread({\n    style: styles.container\n  }, rest), {}, {\n    children: isLoading ? _jsx(ActivityIndicator, {\n      color: theme.colors.text_on_brand_color\n    }) : _jsx(Text, {\n      style: styles.title,\n      children: \"Enviar Feedback\"\n    })\n  }));\n}","map":{"version":3,"names":["React","theme","styles","Button","isLoading","rest","container","colors","text_on_brand_color","title"],"sources":["/Volumes/hdd/_codes/nlw-return-impulse/mobile/src/components/Button/index.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Text,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ActivityIndicator,\n} from 'react-native';\nimport { theme } from '../../theme';\n\nimport { styles } from './styles';\n\ninterface Props extends TouchableOpacityProps {\n  isLoading: boolean;\n}\n\nexport function Button({ isLoading, ...rest }: Props) {\n  return (\n    <TouchableOpacity style={styles.container} {...rest}>\n      {isLoading ? (\n        <ActivityIndicator color={theme.colors.text_on_brand_color} />\n      ) : (\n        <Text style={styles.title}>Enviar Feedback</Text>\n      )}\n    </TouchableOpacity>\n  );\n}\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAOA,SAASC,KAAT;AAEA,SAASC,MAAT;;AAMA,OAAO,SAASC,MAAT,OAA+C;EAAA,IAA7BC,SAA6B,QAA7BA,SAA6B;EAAA,IAAfC,IAAe;;EACpD,OACE,KAAC,gBAAD;IAAkB,KAAK,EAAEH,MAAM,CAACI;EAAhC,GAA+CD,IAA/C;IAAA,UACGD,SAAS,GACR,KAAC,iBAAD;MAAmB,KAAK,EAAEH,KAAK,CAACM,MAAN,CAAaC;IAAvC,EADQ,GAGR,KAAC,IAAD;MAAM,KAAK,EAAEN,MAAM,CAACO,KAApB;MAAA;IAAA;EAJJ,GADF;AASD"},"metadata":{},"sourceType":"module"}