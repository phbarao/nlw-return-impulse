{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ArrowLeft } from 'phosphor-react-native';\nimport { captureScreen } from 'react-native-view-shot';\nimport { theme } from \"../../theme\";\nimport { feedbackTypes } from \"../../utils/feedbackTypes\";\nimport { Button } from \"../Button\";\nimport { ScreenshotButton } from \"../ScreenshotButton\";\nimport { styles } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Form(_ref) {\n  var feedbackType = _ref.feedbackType;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      screenshot = _useState2[0],\n      setScreenshot = _useState2[1];\n\n  var feedbackTypeInfo = feedbackTypes[feedbackType];\n\n  function handleScreenshot() {\n    captureScreen({\n      format: 'jpg',\n      quality: 0.8\n    }).then(function (uri) {\n      console.log(uri);\n      setScreenshot(uri);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  }\n\n  function handleScreenshotRemove() {\n    setScreenshot(null);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(TouchableOpacity, {\n        children: _jsx(ArrowLeft, {\n          size: 24,\n          weight: \"bold\",\n          color: theme.colors.text_secondary\n        })\n      }), _jsxs(View, {\n        style: styles.titleContainer,\n        children: [_jsx(Image, {\n          source: feedbackTypeInfo.image,\n          style: styles.image\n        }), _jsx(Text, {\n          style: styles.titleText,\n          children: feedbackTypeInfo.title\n        })]\n      })]\n    }), _jsx(TextInput, {\n      multiline: true,\n      style: styles.input,\n      placeholder: \"Algo n\\xE3o est\\xE1 funcionando bem? Queremos corrigir. Conte com detalhes o que est\\xE1 acontecendo...\",\n      placeholderTextColor: theme.colors.text_secondary\n    }), _jsxs(View, {\n      style: styles.footer,\n      children: [_jsx(ScreenshotButton, {\n        onTakeShot: handleScreenshot,\n        onRemoveShot: handleScreenshotRemove,\n        screenshot: screenshot\n      }), _jsx(Button, {\n        isLoading: false\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","ArrowLeft","captureScreen","theme","feedbackTypes","Button","ScreenshotButton","styles","Form","feedbackType","screenshot","setScreenshot","feedbackTypeInfo","handleScreenshot","format","quality","then","uri","console","log","catch","error","handleScreenshotRemove","container","header","colors","text_secondary","titleContainer","image","titleText","title","input","footer"],"sources":["/Volumes/hdd/_codes/nlw-return-impulse/mobile/src/components/Form/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Image, Text, TextInput, View, TouchableOpacity } from 'react-native';\nimport { ArrowLeft } from 'phosphor-react-native';\nimport { captureScreen } from 'react-native-view-shot';\nimport { theme } from '../../theme';\nimport { FeedbackType } from '../Widget';\nimport { feedbackTypes } from '../../utils/feedbackTypes';\nimport { Button } from '../Button';\nimport { ScreenshotButton } from '../ScreenshotButton';\nimport { styles } from './styles';\n\ninterface Props {\n  feedbackType: FeedbackType;\n}\n\nexport function Form({ feedbackType }: Props) {\n  const [screenshot, setScreenshot] = useState<string | null>(null);\n\n  const feedbackTypeInfo = feedbackTypes[feedbackType];\n\n  function handleScreenshot() {\n    captureScreen({\n      format: 'jpg',\n      quality: 0.8,\n    })\n      .then((uri) => {\n        console.log(uri);\n        setScreenshot(uri);\n      })\n      .catch((error) => console.log(error));\n  }\n\n  function handleScreenshotRemove() {\n    setScreenshot(null);\n  }\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <TouchableOpacity>\n          <ArrowLeft\n            size={24}\n            weight=\"bold\"\n            color={theme.colors.text_secondary}\n          />\n        </TouchableOpacity>\n\n        <View style={styles.titleContainer}>\n          <Image source={feedbackTypeInfo.image} style={styles.image} />\n          <Text style={styles.titleText}>{feedbackTypeInfo.title}</Text>\n        </View>\n      </View>\n\n      <TextInput\n        multiline\n        style={styles.input}\n        placeholder=\"Algo não está funcionando bem? Queremos corrigir. Conte com detalhes o que está acontecendo...\"\n        placeholderTextColor={theme.colors.text_secondary}\n      />\n\n      <View style={styles.footer}>\n        <ScreenshotButton\n          onTakeShot={handleScreenshot}\n          onRemoveShot={handleScreenshotRemove}\n          screenshot={screenshot}\n        />\n\n        <Button isLoading={false} />\n      </View>\n    </View>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,KAAT;AAEA,SAASC,aAAT;AACA,SAASC,MAAT;AACA,SAASC,gBAAT;AACA,SAASC,MAAT;;;AAMA,OAAO,SAASC,IAAT,OAAuC;EAAA,IAAvBC,YAAuB,QAAvBA,YAAuB;;EAC5C,gBAAoCT,QAAQ,CAAgB,IAAhB,CAA5C;EAAA;EAAA,IAAOU,UAAP;EAAA,IAAmBC,aAAnB;;EAEA,IAAMC,gBAAgB,GAAGR,aAAa,CAACK,YAAD,CAAtC;;EAEA,SAASI,gBAAT,GAA4B;IAC1BX,aAAa,CAAC;MACZY,MAAM,EAAE,KADI;MAEZC,OAAO,EAAE;IAFG,CAAD,CAAb,CAIGC,IAJH,CAIQ,UAACC,GAAD,EAAS;MACbC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACAN,aAAa,CAACM,GAAD,CAAb;IACD,CAPH,EAQGG,KARH,CAQS,UAACC,KAAD;MAAA,OAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAAX;IAAA,CART;EASD;;EAED,SAASC,sBAAT,GAAkC;IAChCX,aAAa,CAAC,IAAD,CAAb;EACD;;EACD,OACE,MAAC,IAAD;IAAM,KAAK,EAAEJ,MAAM,CAACgB,SAApB;IAAA,WACE,MAAC,IAAD;MAAM,KAAK,EAAEhB,MAAM,CAACiB,MAApB;MAAA,WACE,KAAC,gBAAD;QAAA,UACE,KAAC,SAAD;UACE,IAAI,EAAE,EADR;UAEE,MAAM,EAAC,MAFT;UAGE,KAAK,EAAErB,KAAK,CAACsB,MAAN,CAAaC;QAHtB;MADF,EADF,EASE,MAAC,IAAD;QAAM,KAAK,EAAEnB,MAAM,CAACoB,cAApB;QAAA,WACE,KAAC,KAAD;UAAO,MAAM,EAAEf,gBAAgB,CAACgB,KAAhC;UAAuC,KAAK,EAAErB,MAAM,CAACqB;QAArD,EADF,EAEE,KAAC,IAAD;UAAM,KAAK,EAAErB,MAAM,CAACsB,SAApB;UAAA,UAAgCjB,gBAAgB,CAACkB;QAAjD,EAFF;MAAA,EATF;IAAA,EADF,EAgBE,KAAC,SAAD;MACE,SAAS,MADX;MAEE,KAAK,EAAEvB,MAAM,CAACwB,KAFhB;MAGE,WAAW,EAAC,yGAHd;MAIE,oBAAoB,EAAE5B,KAAK,CAACsB,MAAN,CAAaC;IAJrC,EAhBF,EAuBE,MAAC,IAAD;MAAM,KAAK,EAAEnB,MAAM,CAACyB,MAApB;MAAA,WACE,KAAC,gBAAD;QACE,UAAU,EAAEnB,gBADd;QAEE,YAAY,EAAES,sBAFhB;QAGE,UAAU,EAAEZ;MAHd,EADF,EAOE,KAAC,MAAD;QAAQ,SAAS,EAAE;MAAnB,EAPF;IAAA,EAvBF;EAAA,EADF;AAmCD"},"metadata":{},"sourceType":"module"}